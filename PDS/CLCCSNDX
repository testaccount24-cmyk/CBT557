000100* -------------------------------------------------------------- *
000200* Compile Options To use:                                        *
000300*                                                                *
000400* PARM=(RENT,RMODE(ANY),NOSEQ,SSRANGE,APOST,DYN,                 *
000500* NOADV,SOURCE,MAP,XREF,TRUNC(BIN),NUMPROC(PFD))                 *
000600*                                                                *
000700* Link-Edit Options To use:                                      *
000800*                                                                *
000900* PARM=(LET,LIST,MAP,XREF,RENT)                                  *
001000*                                                                *
001100* This program will create a Soundex code from a name. The       *
001200* "Knuth Rules" Soundex algorithm is used. Refer to pages 394 -  *
001300* 395 of Volume 3 -"The Art of Computer Programming" By Don      *
001400* Knuth. This is the "Sorting and Searching" volume, 2nd edition *
001500*                                                                *
001600* I have added some feature to the algorithm which, IMHO, make   *
001700* it more useful across a wider variety of names. These features *
001800* are:                                                           *
001900*                                                                *
002000* 1) The capability of having a longer code generated. The       *
002100*    standard code is in the format ANNN (alpha, nbr, nbr, nbr). *
002200*    By using a passed parameter, a code as long as 10 can be    *
002300*    created.                                                    *
002400*                                                                *
002500* 2) The capability of having an "all alpha" code created. The   *
002600*    standard code is in the format ANNN (alpha, nbr, nbr, nbr). *
002700*    By using a passed parameter, a code can be generated that   *
002800*    is all alphabetic.                                          *
002900*                                                                *
003000* 3) The capability of varying the pad character. The normal     *
003100*    pad character is a zero ("0").                              *
003200*                                                                *
003300* -------------------------------------------------------------- *
003400 Identification Division.
003500 Program-ID.    CLCCSNDX is Initial.
003600 Author.        Jim Moore. Concentrated Logic Inc.
003700 Environment Division.
003800 Data Division.
003900
004000 Working-Storage Section.
004100 01  Copyright.
004200     05                     Pic  X(52) Value
004300         ' ---------The Soundex Algorithm in COBOL----------- '.
004400     05                     Pic  X(53) Value
004500         'Copyright 1990,2002 - Concentrated Logic Incorporated'.
004600 01  Switches.
004700     05  Finished-SW        Pic  X(01) Value Zero.
004800         88  Finished                  Value 'Y'.
004900 01  Feedback-Codes.
005000     05  FC-Severity        Pic S9(04) Binary.
005100     05  FC-Message         Pic S9(04) Binary.
005200     05                     Pic  X(08).
005300 01  Function-Pool-Variables.
005400     05  FP-1-Byte-Fields.
005500         10  Type-Code      Pic  X(01) Value 'N'.
005600             88  Alphameric            Value 'N'.
005700             88  All-Alpha             Value 'A'.
005800         10  Pad-Character  Pic  X(01) Value Space.
005900     05  FP-2-Byte-Fields.
006000         10  Code-Length    Pic  9(02) Value 4.
006100     05  FP-8-Byte-Fields.
006200         10  FP-Address     Pic  X(08) Value Spaces.
006300     05  FP-10-Byte-Fields.
006400         10  Soundex-Code   Pic  X(10) Value Spaces.
006500     05  FP-30-Byte-Fields.
006600         10  Soundex-Name   Pic  X(30) Value Spaces.
006700/
006800 01  Name-Column            Pic S9(08) Binary Value +1.
006900 01  Code-Column            Pic S9(08) Binary Value +1.
007000 01  My-Index-Value         Pic  9(02).
007500
007600 01  Compare-Fields.
007700     05  Valid-Letter       Pic S9(04) Binary Value +0.
007800     05  Prev-Valid-Letter  Pic S9(04) Binary Value +0.
007900     05  Prev-Group         Pic  X(01)        Value Space.
008000     05  Gap                Pic S9(04) Binary Value +0.
008100 01  Letter-Table.
008200     05                     Pic  X(18) Value 'a0b1c2d3e0f1g2h0i0'.
008300     05                     Pic  X(18) Value 'j2k2l4m5n5o0p1q2r6'.
008400     05                     Pic  X(18) Value 's2t3u0v1w0x2y0z2A0'.
008500     05                     Pic  X(18) Value 'B1C2D3E0F1G2H0I0J2'.
008600     05                     Pic  X(18) Value 'K2L4M5N5O0P1Q2R6S2'.
008700     05                     Pic  X(14) Value 'T3U0V1W0X2Y0Z2'.
008800 01                         Redefines Letter-Table.
008900     05  Letters            Occurs 52 Times,
009000                            Ascending Key is AlphaChar,
009100                            Indexed By L-IX.
009200         10  AlphaChar      Pic  X(01).
009300             88  HW-Rule    Values 'H' 'h' 'W' 'w'.
009400         10  Soundex-Group  Pic  X(01).
009500 01  ISPF-Name-Literals.
009600     05  Vdef-L1-Lit        Pic  X(18)
009700*               ----+----1----+----2----+----3----+----4----+----5
009800         Value '(TYPECODE,PADCHAR)'.
009900     05  Vdef-L2-Lit        Pic  X(10)
010000         Value '(CODELENG)'.
010100     05  Vdef-L8-Lit        Pic  X(08)
010200         Value '(FPADDR)'.
010300     05  Vdef-L10-Lit       Pic  X(09)
010400         Value '(SDXCODE)'.
010500     05  Vdef-L30-Lit       Pic  X(09)
010600         Value '(SDXNAME)'.
010700/
010800 01  ISPF-API-Services.
010900     05  Vdefine            Pic  X(08) Value 'VDEFINE'.
011000     05  Vput               Pic  X(08) Value 'VPUT'.
011100     05  Vget               Pic  X(08) Value 'VGET'.
011200     05  Display-P          Pic  X(08) Value 'DISPLAY'.
011300     05  Addpop             Pic  X(08) Value 'ADDPOP'.
011400     05  Rempop             Pic  X(08) Value 'REMPOP'.
011500 01  ISPF-API-Parameters.
011600     05  Len-Fld            Pic S9(08) Binary.
011700     05  Char-Fld           Pic  X(08) Value 'CHAR'.
011800 01  ISPF-Panel-Names.
011900     05  SDXMAINP           Pic  X(08) Value 'SDXMAINP'.
012000     05  SDXTEMPP           Pic  X(08) Value 'SDXTEMPP'.
012100 01  String-Of-Commands.
012200     05  Command-String-Length Pic S9(04) Binary.
012300     05  Command-String        Pic  X(36) Value
012400     'Monitor List Function-Pool-Variables'.
012500/
012600 Linkage Section.
012700 01  Run-Time-Parm.
012800     05  RT-Parm-Length     Pic S9(04) Binary.
012900     05                     Pic  X(01).
013000         88  Debug-Run      Value 'D'.
013100/
013200 Procedure Division Using Run-Time-Parm.
013300     Perform 1000-Initialize                     Thru 1000-Exit.
013400     Perform 2000-All-Processing                 Thru 2000-Exit
013500      Until Finished.
013600     Perform 9000-Finalize                       Thru 9000-Exit.
013700     GoBack.
013800
013900 1000-Initialize.
015100     If Debug-Run
015200        Move Length Of Command-String To Command-String-Length
015300        Call 'CEETEST'  Using String-Of-Commands
015400                              Feedback-Codes
015500        Call 'Viewup03' Using Function-Pool-Variables,
015600                              FP-Address.
015610
015700
015800     Move Length Of Type-Code     To Len-Fld.
015900     Call 'ISPLINK' Using  Vdefine Vdef-L1-Lit
016000                           FP-1-Byte-Fields Char-fld
016100                           Len-Fld.
016200     Move Length Of Code-Length     To Len-Fld.
016300     Call 'ISPLINK' Using  Vdefine Vdef-L2-Lit
016400                           FP-2-Byte-Fields Char-fld
016500                           Len-Fld.
016600     Move Length Of FP-Address      To Len-Fld.
016700     Call 'ISPLINK' Using  Vdefine Vdef-L8-Lit
016800                           FP-8-Byte-Fields Char-fld
016900                           Len-Fld.
017000     Move Length Of Soundex-Code    To Len-Fld
017100     Call 'ISPLINK' Using  Vdefine Vdef-L10-Lit
017200                           FP-10-Byte-Fields Char-fld
017300                           Len-Fld.
017400     Move Length Of Soundex-Name    To Len-Fld
017500     Call 'ISPLINK' Using  Vdefine Vdef-L30-Lit
017600                           FP-30-Byte-Fields Char-fld
017700                           Len-Fld.
017800     Call 'ISPLINK' Using  Addpop.
017900 1000-Exit. Exit.
018000/
018100
018200 2000-All-Processing.
018300     Call 'ISPLINK' Using  Display-P SDXMAINP.
018400
018500     If Return-Code > Zeros
018600       Move 'Y' To Finished-SW
018700     Else
018800     Perform 3000-Generate-Code                  Thru 3000-Exit.
018900 2000-Exit. Exit.
019000/
019100 3000-Generate-Code.
019200     If Code-Length (1:1) Numeric
019300     And Code-Length (2:1) Not Numeric
019400         Move Code-Length (1:1) To Code-Length (2:1)
019500         Move Zero              To Code-Length (1:1).
019600
019700     Perform
019800      Varying Code-Column From 1 By 1
019900       Until Code-Column > Length Of Soundex-Code
020000         Move Pad-Character To Soundex-Code (Code-Column:1)
020100     End-Perform.
020200
020300     Move 1 To Name-Column, Code-Column.
020400*----------------------------------------------------------------*
020500* Loop until either:                                             *
020600*                                                                *
020700* Off the end of the passed name                                 *
020800*      -OR-                                                      *
020900* The requested length of the Soundex code is reached            *
021000*                                                                *
021100* Final clean-up involves spacing out pad characters beyond the  *
021200* requested length, followed by a Function Upper-Case move.      *
021300*----------------------------------------------------------------*
021400
021500     Perform 4000-Do-Soundex                 Thru 4000-Exit
021600        Until Name-Column > Length Of Soundex-Name
021700        OR    Code-Column > Code-Length
021800
021900     If Code-Length < Length Of Soundex-Code
022000       Move Spaces To Soundex-Code
022100       (Code-Length + 1:Length Of Soundex-Code -   Code-Length).
022200
022300     Move Function Upper-Case (Soundex-Code) To Soundex-Code.
022400 3000-Exit. Exit.
022500/
022600 4000-Do-Soundex.
022700*----------------------------------------------------------------*
022800* Inline perform to locate UPPER or lower case letter. Note that *
022900* the space character (X'40') is considered alpha-upper so the   *
023000* Boolean "and not = space" is required.                         *
023100*----------------------------------------------------------------*
023200     Perform
023300     Varying Name-Column From Name-Column By 1
023400       Until Name-Column > Length Of Soundex-Name
023500       Or    ((Soundex-Name (Name-Column:1) Alphabetic-Upper
023600              Or
023700              Soundex-Name (Name-Column:1) Alphabetic-Lower)
023800              And
023900              Soundex-Name (Name-Column:1) NOT = Space)
024000     End-Perform
024100
024200     If Name-Column > Length Of Soundex-Name
024300        Next Sentence
024400     Else
024500     Search All Letters
024600        At End
024700        Continue
024800     When AlphaChar (L-IX) = Soundex-Name (Name-Column:1)
024900        Perform 5000-Derive-Groupings           Thru 5000-Exit
025000     End-Search
025100     Add 1 To Name-Column.
025200 4000-Exit. Exit.
025300/
025400 5000-Derive-Groupings.
025500*----------------------------------------------------------------*
025600* Soundex always takes the first letter of its code "as-is".     *
025700* So, if Code-Column = 1, the actual letter (never a number) is  *
025800* moved to the output code.                                      *
025900*                                                                *
026000* If Code Column > 1, the "contiguous letter in same group" test *
026100* is performed before moving the actual letter/number to the     *
026200* output code.                                                   *
026300*----------------------------------------------------------------*
026400     If Code-Column > 1
026500       Add 1 To Valid-Letter
026600       If Soundex-Group (L-IX) NOT = Zero
026700         Compute Gap = Valid-Letter - Prev-Valid-Letter
026800         If Soundex-Group (L-IX) NOT = Prev-Group
026900              Perform 6000-Move-To-Code        Thru 6000-Exit
027000         Else
027100         If Gap > 1
027200            Perform 6000-Move-To-Code          Thru 6000-Exit
027300         Else
027400         Move Valid-Letter         To Prev-Valid-Letter
027500         Move Soundex-Group (L-IX) To Prev-Group
027600       Else
027700       If HW-Rule (L-IX)
027800          Add 1 To Prev-Valid-Letter
027900       Else
028000       Next Sentence
028100     Else
028200     Perform 6000-Move-To-Code                 Thru 6000-Exit.
028300 5000-Exit. Exit.
028400/
028500 6000-Move-To-Code.
028600*----------------------------------------------------------------*
028700* Again, if code-column = 1, move "alphachar" to code.           *
028800* Otherwise, save values for the current soundex group and       *
028900* letter as "previous".                                          *
029000*                                                                *
029100* When "alphameric", move the numeric group number to the        *
029200* output code, else move the "alphachar".                        *
029300*                                                                *
029400* Code-Column is incremented here only.                          *
029500*----------------------------------------------------------------*
029600     If Code-Column > 1
029700      Move Soundex-Group (L-IX) To Prev-Group
029800      Move Valid-Letter         To Prev-Valid-Letter
029900      If Alphameric
030000         Move Soundex-Group (L-IX)
030100         To  Soundex-Code (Code-Column:1)
030200      Else
030300      Move AlphaChar (L-IX)    To Soundex-Code (Code-Column:1)
030400     Else
030500     Move 1                    To Valid-Letter
030600     Move Valid-Letter         To Prev-Valid-Letter
030700     Move Soundex-Group (L-IX) To Prev-Group
030800     Move AlphaChar (L-IX)     To Soundex-Code (Code-Column:1).
030900
031000     Add 1 To Code-Column.
031100 6000-Exit. Exit.
031200/
031300 9000-Finalize.
031400     Call 'ISPLINK' Using Rempop.
031500 9000-Exit. Exit.
